"use strict";
/**
 * @license
 * Copyright 2019 Ludan Stoecklé
 * SPDX-License-Identifier: Apache-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdjectiveManager = void 0;
const rosaenlg_filter_1 = require("rosaenlg-filter");
class AdjectiveManager {
    setSpy(spy) {
        this.spy = spy;
    }
    getSpy() {
        return this.spy;
    }
    constructor(languageImpl, genderNumberManager, synManager, saveRollbackManager, helper) {
        this.spy = null;
        this.languageImpl = languageImpl;
        this.genderNumberManager = genderNumberManager;
        this.synManager = synManager;
        this.saveRollbackManager = saveRollbackManager;
        this.helper = helper;
    }
    // when using the mixin
    agreeAdj(adjective, subject, params) {
        if (this.saveRollbackManager.isEvaluatingEmpty) {
            this.getSpy().appendPugHtml('SOME_ADJ'); // as is called directly through a mixin
        }
        else {
            this.helper.insertSeparatingSpaceIfRequired();
            const adj = this.synManager.synFctHelper(adjective);
            const agreedAdj = this.getAgreeAdj(adj, subject, params);
            this.getSpy().appendPugHtml(agreedAdj);
            if (this.languageImpl.eatSpaceWhenAdjEndsWithApostrophe && agreedAdj.endsWith("'")) {
                // bell'uomo in Italian
                this.getSpy().appendPugHtml(`¤${rosaenlg_filter_1.EATSPACE}¤`);
            }
            this.helper.insertSeparatingSpaceIfRequired();
        }
    }
    getAgreeAdj(adjective, subject, params) {
        // no need to test for isEvaluatingEmpty as only called through value or agreeAdj mixins
        // console.log(`getAgreeAdj ${adjective} ${JSON.stringify(subject)} ${JSON.stringify(params)}`);
        const gender = this.genderNumberManager.getRefGender(subject, params);
        // if subject is a word we can extract gender from it, but not the number
        const number = this.genderNumberManager.getRefNumber(subject, params) || 'S';
        return this.languageImpl.getAgreeAdj(adjective, gender, number, subject, params);
    }
}
exports.AdjectiveManager = AdjectiveManager;
//# sourceMappingURL=AdjectiveManager.js.map